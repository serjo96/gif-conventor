version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network
    stop_grace_period: 10s
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../backend/src:/app/src
      - ../backend/dist:/app/dist
      - ../backend/uploads:/app/uploads
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    stop_grace_period: 30s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  worker:
    build:
      context: ../backend
      dockerfile: worker.Dockerfile
    deploy:
      replicas: 5
    volumes:
      - ../backend/uploads:/app/uploads
      - ../backend/src:/app/src
      - ../backend/dist:/app/dist
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    stop_grace_period: 30s
    healthcheck:
      test: ["CMD", "node", "-e", "require('bullmq').Worker.isReady()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge
